name: Medhead Backend Services Pipeline

# Déclenchement du workflow sur push ou pull request
on:
  push:
    branches:
      - '*'
    paths:
      - services/** # Lorsque des fichiers dans le répertoire 'services' changent
      - 'docker-compose.yml' # Lorsque 'docker-compose.yml' change
      - .github/workflows/*-backend.yml  # Lorsque les fichiers YAML de workflow backend changent

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      # Extraction du code du dépôt
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Configuration de JDK 17 pour la compilation
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      # Compilation de tous les microservices

      # Config-server ms
      - name : Compile config-server ms
        run: |
          cd services/config-server
          ./mvn clean compile

      # Discovery ms
      - name : Compile Discovery ms
        run: |
          cd services/discovery
          ./mvn clean compile

      # userAuthentificaton ms
      - name : Compile UserAuthentificaton ms
        run: |
          cd services/userAuthentificaton
          ./mvn clean compile

      # hospitalManagement ms
      - name : Compile HospitalManagement ms
        run: |
          cd services/hospitalManagement
          ./mvn clean compile

      # reservation ms
      - name : Compile Reservation ms
        run: |
          cd services/reservation
          ./mvn clean compile

      # notification ms
      - name : Compile Notification ms
        run: |
          cd services/notification
          ./mvn clean compile

        # Gateway Api
      - name : Compile Gateway Api
        run: |
          cd services/gateway
          ./mvn clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Récupère tout l'historique Git

      # Configuration de JDK 17 pour les tests
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      # Exécution des tests unitaires pour tous les microservices

      # Config-server ms
      - name :  Running Unit tests for the config-server ms
        run: |
          cd services/config-server
          ./mvn clean test

      # Discovery ms
      - name : Running Unit tests for Discovery ms
        run: |
          cd services/discovery
          ./mvn clean test

      # userAuthentificaton ms
      - name : Running Unit tests for UserAuthentificaton ms
        run: |
          cd services/userAuthentificaton
          ./mvn clean test

      # hospitalManagement ms
      - name : Running Unit tests for HospitalManagement ms
        run: |
          cd services/hospitalManagement
          ./mvn clean test

      # reservation ms
      - name : Running Unit tests for Reservation ms
        run: |
          cd services/reservation
          ./mvn clean test

      # notification ms
      - name : Running Unit tests for Notification ms
        run: |
          cd services/notification
          ./mvn clean test

        # Gateway Api
      - name : Running Unit tests for Gateway Api
        run: |
          cd services/gateway
          ./mvn clean test

  build:
    runs-on: ubuntu-latest
    name: Build backend micro-services
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Configuration de JDK 17 pour la construction
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      # Construction de tous les microservices

      # Configure JDK 17 pour la construction
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      # Config-server ms
      - name :  Build the config-server ms
        run: |
          cd services/config-server
          ./mvn clean package

      # Discovery ms
      - name : Build the Discovery ms
        run: |
          cd services/discovery
          ./mvn clean package

      # userAuthentificaton ms
      - name : Build the UserAuthentificaton ms
        run: |
          cd services/userAuthentificaton
          ./mvn clean package

      # hospitalManagement ms
      - name : Build the HospitalManagement ms
        run: |
          cd services/hospitalManagement
          ./mvn clean package

      # reservation ms
      - name : Build the Reservation ms
        run: |
          cd services/reservation
          ./mvn clean package

      # notification ms
      - name : Build the Notification ms
        run: |
          cd services/notification
          ./mvn clean package

        # Gateway Api
      - name : Build the Gateway Api
        run: |
          cd services/gateway
          ./mvn clean package

      # Téléchargement des artéfacts de build pour utilisation ultérieure
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            services/config-server/target/*.jar
            services/discovery/target/*.jar
            services/userAuthentificaton/target/*.jar
            services/hospitalManagement/target/*.jar
            services/reservation/target/*.jar
            services/notification/target/*.jar
            services/gateway/target/*.jar